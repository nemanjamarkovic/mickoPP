Terminals unused in grammar

    _


Grammar

    0 $accept: program $end

    1 program: global_list function_list

    2 global_list: %empty
    3            | global_list global_var

    4 global_var: _TYPE _ID _SEMICOLON

    5 function_list: function
    6              | function_list function

    7 $@1: %empty

    8 function: _TYPE _ID $@1 _LPAREN parameter _RPAREN body

    9 parameter: %empty
   10          | pars

   11 pars: _TYPE _ID
   12     | pars _COMMA _TYPE _ID

   13 $@2: %empty

   14 body: _LBRACKET variable_list $@2 statement_list _RBRACKET

   15 variable_list: %empty
   16              | variable_list variable

   17 vars: _ID
   18     | vars _COMMA _ID

   19 type: _TYPE

   20 variable: type vars _SEMICOLON

   21 statement_list: %empty
   22               | statement_list statement

   23 statement: compound_statement
   24          | assignment_statement
   25          | if_statement
   26          | return_statement
   27          | increment_statement
   28          | for
   29          | check_statement

   30 compound_statement: _LBRACKET statement_list _RBRACKET

   31 assignment_statement: _ID _ASSIGN num_exp _SEMICOLON

   32 num_exp: exp
   33        | num_exp _AROP exp

   34 exp: literal
   35    | _ID
   36    | increment
   37    | function_call
   38    | _LPAREN num_exp _RPAREN

   39 literal: _INT_NUMBER
   40        | _UINT_NUMBER

   41 increment: _ID _INCREMENT

   42 increment_statement: increment _SEMICOLON

   43 $@3: %empty

   44 function_call: _ID $@3 _LPAREN argument _RPAREN

   45 argument: %empty
   46         | arguments

   47 arguments: num_exp
   48          | arguments _COMMA num_exp

   49 if_statement: if_part
   50             | if_part _ELSE statement

   51 @4: %empty

   52 $@5: %empty

   53 if_part: _IF _LPAREN @4 log_exp $@5 _RPAREN statement

   54 log_exp: rel_exp
   55        | log_exp _AND rel_exp
   56        | log_exp _OR rel_exp

   57 rel_exp: num_exp _RELOP num_exp

   58 return_statement: _RETURN num_exp _SEMICOLON
   59                 | _RETURN _SEMICOLON

   60 @6: %empty

   61 @7: %empty

   62 for: _FOR _TYPE _ID @6 _IN _LPAREN literal _DDOT literal _RPAREN @7 statement

   63 @8: %empty

   64 $@9: %empty

   65 check_statement: _CHECK _LPAREN _ID @8 _RPAREN _LBRACKET check $@9 _RBRACKET

   66 check: when_list
   67      | when_list otherwise

   68 when_list: when
   69          | when _FINISH _SEMICOLON
   70          | when_list when
   71          | when_list when _FINISH _SEMICOLON

   72 $@10: %empty

   73 when: _WHEN literal $@10 _FOLLOWS statement

   74 $@11: %empty

   75 otherwise: _OTHERW _FOLLOWS $@11 statement


Terminals, with rules where they appear

    $end (0) 0
    error (256)
    _TYPE <i> (258) 4 8 11 12 19 62
    _IF (259) 53
    _ELSE (260) 50
    _RETURN (261) 58 59
    _ID <s> (262) 4 8 11 12 17 18 31 35 41 44 62 65
    _INT_NUMBER <s> (263) 39
    _UINT_NUMBER <s> (264) 40
    _LPAREN (265) 8 38 44 53 62 65
    _RPAREN (266) 8 38 44 53 62 65
    _COMMA (267) 12 18 48
    _LBRACKET (268) 14 30 65
    _RBRACKET (269) 14 30 65
    _ASSIGN (270) 31
    _SEMICOLON (271) 4 20 31 42 58 59 69 71
    _INCREMENT (272) 41
    _AND (273) 55
    _ (274)
    _AROP <i> (275) 33
    _RELOP <i> (276) 57
    _OR (277) 56
    _FOR (278) 62
    _IN (279) 62
    _DDOT (280) 62
    _FINISH (281) 69 71
    _OTHERW (282) 75
    _CHECK (283) 65
    _WHEN (284) 73
    _FOLLOWS (285) 73 75
    ONLY_IF (286)


Nonterminals, with rules where they appear

    $accept (32)
        on left: 0
    program (33)
        on left: 1
        on right: 0
    global_list (34)
        on left: 2 3
        on right: 1 3
    global_var (35)
        on left: 4
        on right: 3
    function_list (36)
        on left: 5 6
        on right: 1 6
    function (37)
        on left: 8
        on right: 5 6
    $@1 (38)
        on left: 7
        on right: 8
    parameter (39)
        on left: 9 10
        on right: 8
    pars <i> (40)
        on left: 11 12
        on right: 10 12
    body (41)
        on left: 14
        on right: 8
    $@2 (42)
        on left: 13
        on right: 14
    variable_list (43)
        on left: 15 16
        on right: 14 16
    vars <s> (44)
        on left: 17 18
        on right: 18 20
    type (45)
        on left: 19
        on right: 20
    variable <i> (46)
        on left: 20
        on right: 16
    statement_list (47)
        on left: 21 22
        on right: 14 22 30
    statement (48)
        on left: 23 24 25 26 27 28 29
        on right: 22 50 53 62 73 75
    compound_statement (49)
        on left: 30
        on right: 23
    assignment_statement (50)
        on left: 31
        on right: 24
    num_exp <i> (51)
        on left: 32 33
        on right: 31 33 38 47 48 57 58
    exp <i> (52)
        on left: 34 35 36 37 38
        on right: 32 33
    literal <i> (53)
        on left: 39 40
        on right: 34 62 73
    increment <i> (54)
        on left: 41
        on right: 36 42
    increment_statement <i> (55)
        on left: 42
        on right: 27
    function_call <i> (56)
        on left: 44
        on right: 37
    $@3 (57)
        on left: 43
        on right: 44
    argument <i> (58)
        on left: 45 46
        on right: 44
    arguments <i> (59)
        on left: 47 48
        on right: 46 48
    if_statement (60)
        on left: 49 50
        on right: 25
    if_part <i> (61)
        on left: 53
        on right: 49 50
    @4 (62)
        on left: 51
        on right: 53
    $@5 (63)
        on left: 52
        on right: 53
    log_exp <i> (64)
        on left: 54 55 56
        on right: 53 55 56
    rel_exp <i> (65)
        on left: 57
        on right: 54 55 56
    return_statement (66)
        on left: 58 59
        on right: 26
    for (67)
        on left: 62
        on right: 28
    @6 (68)
        on left: 60
        on right: 62
    @7 (69)
        on left: 61
        on right: 62
    check_statement (70)
        on left: 65
        on right: 29
    @8 (71)
        on left: 63
        on right: 65
    $@9 (72)
        on left: 64
        on right: 65
    check <i> (73)
        on left: 66 67
        on right: 65
    when_list <i> (74)
        on left: 68 69 70 71
        on right: 66 67 70 71
    when <i> (75)
        on left: 73
        on right: 68 69 70 71
    $@10 (76)
        on left: 72
        on right: 73
    otherwise (77)
        on left: 75
        on right: 67
    $@11 (78)
        on left: 74
        on right: 75


State 0

    0 $accept: . program $end

    $default  reduce using rule 2 (global_list)

    program      go to state 1
    global_list  go to state 2


State 1

    0 $accept: program . $end

    $end  shift, and go to state 3


State 2

    1 program: global_list . function_list
    3 global_list: global_list . global_var

    _TYPE  shift, and go to state 4

    global_var     go to state 5
    function_list  go to state 6
    function       go to state 7


State 3

    0 $accept: program $end .

    $default  accept


State 4

    4 global_var: _TYPE . _ID _SEMICOLON
    8 function: _TYPE . _ID $@1 _LPAREN parameter _RPAREN body

    _ID  shift, and go to state 8


State 5

    3 global_list: global_list global_var .

    $default  reduce using rule 3 (global_list)


State 6

    1 program: global_list function_list .
    6 function_list: function_list . function

    _TYPE  shift, and go to state 9

    $default  reduce using rule 1 (program)

    function  go to state 10


State 7

    5 function_list: function .

    $default  reduce using rule 5 (function_list)


State 8

    4 global_var: _TYPE _ID . _SEMICOLON
    8 function: _TYPE _ID . $@1 _LPAREN parameter _RPAREN body

    _SEMICOLON  shift, and go to state 11

    $default  reduce using rule 7 ($@1)

    $@1  go to state 12


State 9

    8 function: _TYPE . _ID $@1 _LPAREN parameter _RPAREN body

    _ID  shift, and go to state 13


State 10

    6 function_list: function_list function .

    $default  reduce using rule 6 (function_list)


State 11

    4 global_var: _TYPE _ID _SEMICOLON .

    $default  reduce using rule 4 (global_var)


State 12

    8 function: _TYPE _ID $@1 . _LPAREN parameter _RPAREN body

    _LPAREN  shift, and go to state 14


State 13

    8 function: _TYPE _ID . $@1 _LPAREN parameter _RPAREN body

    $default  reduce using rule 7 ($@1)

    $@1  go to state 12


State 14

    8 function: _TYPE _ID $@1 _LPAREN . parameter _RPAREN body

    _TYPE  shift, and go to state 15

    $default  reduce using rule 9 (parameter)

    parameter  go to state 16
    pars       go to state 17


State 15

   11 pars: _TYPE . _ID

    _ID  shift, and go to state 18


State 16

    8 function: _TYPE _ID $@1 _LPAREN parameter . _RPAREN body

    _RPAREN  shift, and go to state 19


State 17

   10 parameter: pars .
   12 pars: pars . _COMMA _TYPE _ID

    _COMMA  shift, and go to state 20

    $default  reduce using rule 10 (parameter)


State 18

   11 pars: _TYPE _ID .

    $default  reduce using rule 11 (pars)


State 19

    8 function: _TYPE _ID $@1 _LPAREN parameter _RPAREN . body

    _LBRACKET  shift, and go to state 21

    body  go to state 22


State 20

   12 pars: pars _COMMA . _TYPE _ID

    _TYPE  shift, and go to state 23


State 21

   14 body: _LBRACKET . variable_list $@2 statement_list _RBRACKET

    $default  reduce using rule 15 (variable_list)

    variable_list  go to state 24


State 22

    8 function: _TYPE _ID $@1 _LPAREN parameter _RPAREN body .

    $default  reduce using rule 8 (function)


State 23

   12 pars: pars _COMMA _TYPE . _ID

    _ID  shift, and go to state 25


State 24

   14 body: _LBRACKET variable_list . $@2 statement_list _RBRACKET
   16 variable_list: variable_list . variable

    _TYPE  shift, and go to state 26

    $default  reduce using rule 13 ($@2)

    $@2       go to state 27
    type      go to state 28
    variable  go to state 29


State 25

   12 pars: pars _COMMA _TYPE _ID .

    $default  reduce using rule 12 (pars)


State 26

   19 type: _TYPE .

    $default  reduce using rule 19 (type)


State 27

   14 body: _LBRACKET variable_list $@2 . statement_list _RBRACKET

    $default  reduce using rule 21 (statement_list)

    statement_list  go to state 30


State 28

   20 variable: type . vars _SEMICOLON

    _ID  shift, and go to state 31

    vars  go to state 32


State 29

   16 variable_list: variable_list variable .

    $default  reduce using rule 16 (variable_list)


State 30

   14 body: _LBRACKET variable_list $@2 statement_list . _RBRACKET
   22 statement_list: statement_list . statement

    _IF        shift, and go to state 33
    _RETURN    shift, and go to state 34
    _ID        shift, and go to state 35
    _LBRACKET  shift, and go to state 36
    _RBRACKET  shift, and go to state 37
    _FOR       shift, and go to state 38
    _CHECK     shift, and go to state 39

    statement             go to state 40
    compound_statement    go to state 41
    assignment_statement  go to state 42
    increment             go to state 43
    increment_statement   go to state 44
    if_statement          go to state 45
    if_part               go to state 46
    return_statement      go to state 47
    for                   go to state 48
    check_statement       go to state 49


State 31

   17 vars: _ID .

    $default  reduce using rule 17 (vars)


State 32

   18 vars: vars . _COMMA _ID
   20 variable: type vars . _SEMICOLON

    _COMMA      shift, and go to state 50
    _SEMICOLON  shift, and go to state 51


State 33

   53 if_part: _IF . _LPAREN @4 log_exp $@5 _RPAREN statement

    _LPAREN  shift, and go to state 52


State 34

   58 return_statement: _RETURN . num_exp _SEMICOLON
   59                 | _RETURN . _SEMICOLON

    _ID           shift, and go to state 53
    _INT_NUMBER   shift, and go to state 54
    _UINT_NUMBER  shift, and go to state 55
    _LPAREN       shift, and go to state 56
    _SEMICOLON    shift, and go to state 57

    num_exp        go to state 58
    exp            go to state 59
    literal        go to state 60
    increment      go to state 61
    function_call  go to state 62


State 35

   31 assignment_statement: _ID . _ASSIGN num_exp _SEMICOLON
   41 increment: _ID . _INCREMENT

    _ASSIGN     shift, and go to state 63
    _INCREMENT  shift, and go to state 64


State 36

   30 compound_statement: _LBRACKET . statement_list _RBRACKET

    $default  reduce using rule 21 (statement_list)

    statement_list  go to state 65


State 37

   14 body: _LBRACKET variable_list $@2 statement_list _RBRACKET .

    $default  reduce using rule 14 (body)


State 38

   62 for: _FOR . _TYPE _ID @6 _IN _LPAREN literal _DDOT literal _RPAREN @7 statement

    _TYPE  shift, and go to state 66


State 39

   65 check_statement: _CHECK . _LPAREN _ID @8 _RPAREN _LBRACKET check $@9 _RBRACKET

    _LPAREN  shift, and go to state 67


State 40

   22 statement_list: statement_list statement .

    $default  reduce using rule 22 (statement_list)


State 41

   23 statement: compound_statement .

    $default  reduce using rule 23 (statement)


State 42

   24 statement: assignment_statement .

    $default  reduce using rule 24 (statement)


State 43

   42 increment_statement: increment . _SEMICOLON

    _SEMICOLON  shift, and go to state 68


State 44

   27 statement: increment_statement .

    $default  reduce using rule 27 (statement)


State 45

   25 statement: if_statement .

    $default  reduce using rule 25 (statement)


State 46

   49 if_statement: if_part .
   50             | if_part . _ELSE statement

    _ELSE  shift, and go to state 69

    $default  reduce using rule 49 (if_statement)


State 47

   26 statement: return_statement .

    $default  reduce using rule 26 (statement)


State 48

   28 statement: for .

    $default  reduce using rule 28 (statement)


State 49

   29 statement: check_statement .

    $default  reduce using rule 29 (statement)


State 50

   18 vars: vars _COMMA . _ID

    _ID  shift, and go to state 70


State 51

   20 variable: type vars _SEMICOLON .

    $default  reduce using rule 20 (variable)


State 52

   53 if_part: _IF _LPAREN . @4 log_exp $@5 _RPAREN statement

    $default  reduce using rule 51 (@4)

    @4  go to state 71


State 53

   35 exp: _ID .
   41 increment: _ID . _INCREMENT
   44 function_call: _ID . $@3 _LPAREN argument _RPAREN

    _INCREMENT  shift, and go to state 64

    _LPAREN   reduce using rule 43 ($@3)
    $default  reduce using rule 35 (exp)

    $@3  go to state 72


State 54

   39 literal: _INT_NUMBER .

    $default  reduce using rule 39 (literal)


State 55

   40 literal: _UINT_NUMBER .

    $default  reduce using rule 40 (literal)


State 56

   38 exp: _LPAREN . num_exp _RPAREN

    _ID           shift, and go to state 53
    _INT_NUMBER   shift, and go to state 54
    _UINT_NUMBER  shift, and go to state 55
    _LPAREN       shift, and go to state 56

    num_exp        go to state 73
    exp            go to state 59
    literal        go to state 60
    increment      go to state 61
    function_call  go to state 62


State 57

   59 return_statement: _RETURN _SEMICOLON .

    $default  reduce using rule 59 (return_statement)


State 58

   33 num_exp: num_exp . _AROP exp
   58 return_statement: _RETURN num_exp . _SEMICOLON

    _SEMICOLON  shift, and go to state 74
    _AROP       shift, and go to state 75


State 59

   32 num_exp: exp .

    $default  reduce using rule 32 (num_exp)


State 60

   34 exp: literal .

    $default  reduce using rule 34 (exp)


State 61

   36 exp: increment .

    $default  reduce using rule 36 (exp)


State 62

   37 exp: function_call .

    $default  reduce using rule 37 (exp)


State 63

   31 assignment_statement: _ID _ASSIGN . num_exp _SEMICOLON

    _ID           shift, and go to state 53
    _INT_NUMBER   shift, and go to state 54
    _UINT_NUMBER  shift, and go to state 55
    _LPAREN       shift, and go to state 56

    num_exp        go to state 76
    exp            go to state 59
    literal        go to state 60
    increment      go to state 61
    function_call  go to state 62


State 64

   41 increment: _ID _INCREMENT .

    $default  reduce using rule 41 (increment)


State 65

   22 statement_list: statement_list . statement
   30 compound_statement: _LBRACKET statement_list . _RBRACKET

    _IF        shift, and go to state 33
    _RETURN    shift, and go to state 34
    _ID        shift, and go to state 35
    _LBRACKET  shift, and go to state 36
    _RBRACKET  shift, and go to state 77
    _FOR       shift, and go to state 38
    _CHECK     shift, and go to state 39

    statement             go to state 40
    compound_statement    go to state 41
    assignment_statement  go to state 42
    increment             go to state 43
    increment_statement   go to state 44
    if_statement          go to state 45
    if_part               go to state 46
    return_statement      go to state 47
    for                   go to state 48
    check_statement       go to state 49


State 66

   62 for: _FOR _TYPE . _ID @6 _IN _LPAREN literal _DDOT literal _RPAREN @7 statement

    _ID  shift, and go to state 78


State 67

   65 check_statement: _CHECK _LPAREN . _ID @8 _RPAREN _LBRACKET check $@9 _RBRACKET

    _ID  shift, and go to state 79


State 68

   42 increment_statement: increment _SEMICOLON .

    $default  reduce using rule 42 (increment_statement)


State 69

   50 if_statement: if_part _ELSE . statement

    _IF        shift, and go to state 33
    _RETURN    shift, and go to state 34
    _ID        shift, and go to state 35
    _LBRACKET  shift, and go to state 36
    _FOR       shift, and go to state 38
    _CHECK     shift, and go to state 39

    statement             go to state 80
    compound_statement    go to state 41
    assignment_statement  go to state 42
    increment             go to state 43
    increment_statement   go to state 44
    if_statement          go to state 45
    if_part               go to state 46
    return_statement      go to state 47
    for                   go to state 48
    check_statement       go to state 49


State 70

   18 vars: vars _COMMA _ID .

    $default  reduce using rule 18 (vars)


State 71

   53 if_part: _IF _LPAREN @4 . log_exp $@5 _RPAREN statement

    _ID           shift, and go to state 53
    _INT_NUMBER   shift, and go to state 54
    _UINT_NUMBER  shift, and go to state 55
    _LPAREN       shift, and go to state 56

    num_exp        go to state 81
    exp            go to state 59
    literal        go to state 60
    increment      go to state 61
    function_call  go to state 62
    log_exp        go to state 82
    rel_exp        go to state 83


State 72

   44 function_call: _ID $@3 . _LPAREN argument _RPAREN

    _LPAREN  shift, and go to state 84


State 73

   33 num_exp: num_exp . _AROP exp
   38 exp: _LPAREN num_exp . _RPAREN

    _RPAREN  shift, and go to state 85
    _AROP    shift, and go to state 75


State 74

   58 return_statement: _RETURN num_exp _SEMICOLON .

    $default  reduce using rule 58 (return_statement)


State 75

   33 num_exp: num_exp _AROP . exp

    _ID           shift, and go to state 53
    _INT_NUMBER   shift, and go to state 54
    _UINT_NUMBER  shift, and go to state 55
    _LPAREN       shift, and go to state 56

    exp            go to state 86
    literal        go to state 60
    increment      go to state 61
    function_call  go to state 62


State 76

   31 assignment_statement: _ID _ASSIGN num_exp . _SEMICOLON
   33 num_exp: num_exp . _AROP exp

    _SEMICOLON  shift, and go to state 87
    _AROP       shift, and go to state 75


State 77

   30 compound_statement: _LBRACKET statement_list _RBRACKET .

    $default  reduce using rule 30 (compound_statement)


State 78

   62 for: _FOR _TYPE _ID . @6 _IN _LPAREN literal _DDOT literal _RPAREN @7 statement

    $default  reduce using rule 60 (@6)

    @6  go to state 88


State 79

   65 check_statement: _CHECK _LPAREN _ID . @8 _RPAREN _LBRACKET check $@9 _RBRACKET

    $default  reduce using rule 63 (@8)

    @8  go to state 89


State 80

   50 if_statement: if_part _ELSE statement .

    $default  reduce using rule 50 (if_statement)


State 81

   33 num_exp: num_exp . _AROP exp
   57 rel_exp: num_exp . _RELOP num_exp

    _AROP   shift, and go to state 75
    _RELOP  shift, and go to state 90


State 82

   53 if_part: _IF _LPAREN @4 log_exp . $@5 _RPAREN statement
   55 log_exp: log_exp . _AND rel_exp
   56        | log_exp . _OR rel_exp

    _AND  shift, and go to state 91
    _OR   shift, and go to state 92

    $default  reduce using rule 52 ($@5)

    $@5  go to state 93


State 83

   54 log_exp: rel_exp .

    $default  reduce using rule 54 (log_exp)


State 84

   44 function_call: _ID $@3 _LPAREN . argument _RPAREN

    _ID           shift, and go to state 53
    _INT_NUMBER   shift, and go to state 54
    _UINT_NUMBER  shift, and go to state 55
    _LPAREN       shift, and go to state 56

    $default  reduce using rule 45 (argument)

    num_exp        go to state 94
    exp            go to state 59
    literal        go to state 60
    increment      go to state 61
    function_call  go to state 62
    argument       go to state 95
    arguments      go to state 96


State 85

   38 exp: _LPAREN num_exp _RPAREN .

    $default  reduce using rule 38 (exp)


State 86

   33 num_exp: num_exp _AROP exp .

    $default  reduce using rule 33 (num_exp)


State 87

   31 assignment_statement: _ID _ASSIGN num_exp _SEMICOLON .

    $default  reduce using rule 31 (assignment_statement)


State 88

   62 for: _FOR _TYPE _ID @6 . _IN _LPAREN literal _DDOT literal _RPAREN @7 statement

    _IN  shift, and go to state 97


State 89

   65 check_statement: _CHECK _LPAREN _ID @8 . _RPAREN _LBRACKET check $@9 _RBRACKET

    _RPAREN  shift, and go to state 98


State 90

   57 rel_exp: num_exp _RELOP . num_exp

    _ID           shift, and go to state 53
    _INT_NUMBER   shift, and go to state 54
    _UINT_NUMBER  shift, and go to state 55
    _LPAREN       shift, and go to state 56

    num_exp        go to state 99
    exp            go to state 59
    literal        go to state 60
    increment      go to state 61
    function_call  go to state 62


State 91

   55 log_exp: log_exp _AND . rel_exp

    _ID           shift, and go to state 53
    _INT_NUMBER   shift, and go to state 54
    _UINT_NUMBER  shift, and go to state 55
    _LPAREN       shift, and go to state 56

    num_exp        go to state 81
    exp            go to state 59
    literal        go to state 60
    increment      go to state 61
    function_call  go to state 62
    rel_exp        go to state 100


State 92

   56 log_exp: log_exp _OR . rel_exp

    _ID           shift, and go to state 53
    _INT_NUMBER   shift, and go to state 54
    _UINT_NUMBER  shift, and go to state 55
    _LPAREN       shift, and go to state 56

    num_exp        go to state 81
    exp            go to state 59
    literal        go to state 60
    increment      go to state 61
    function_call  go to state 62
    rel_exp        go to state 101


State 93

   53 if_part: _IF _LPAREN @4 log_exp $@5 . _RPAREN statement

    _RPAREN  shift, and go to state 102


State 94

   33 num_exp: num_exp . _AROP exp
   47 arguments: num_exp .

    _AROP  shift, and go to state 75

    $default  reduce using rule 47 (arguments)


State 95

   44 function_call: _ID $@3 _LPAREN argument . _RPAREN

    _RPAREN  shift, and go to state 103


State 96

   46 argument: arguments .
   48 arguments: arguments . _COMMA num_exp

    _COMMA  shift, and go to state 104

    $default  reduce using rule 46 (argument)


State 97

   62 for: _FOR _TYPE _ID @6 _IN . _LPAREN literal _DDOT literal _RPAREN @7 statement

    _LPAREN  shift, and go to state 105


State 98

   65 check_statement: _CHECK _LPAREN _ID @8 _RPAREN . _LBRACKET check $@9 _RBRACKET

    _LBRACKET  shift, and go to state 106


State 99

   33 num_exp: num_exp . _AROP exp
   57 rel_exp: num_exp _RELOP num_exp .

    _AROP  shift, and go to state 75

    $default  reduce using rule 57 (rel_exp)


State 100

   55 log_exp: log_exp _AND rel_exp .

    $default  reduce using rule 55 (log_exp)


State 101

   56 log_exp: log_exp _OR rel_exp .

    $default  reduce using rule 56 (log_exp)


State 102

   53 if_part: _IF _LPAREN @4 log_exp $@5 _RPAREN . statement

    _IF        shift, and go to state 33
    _RETURN    shift, and go to state 34
    _ID        shift, and go to state 35
    _LBRACKET  shift, and go to state 36
    _FOR       shift, and go to state 38
    _CHECK     shift, and go to state 39

    statement             go to state 107
    compound_statement    go to state 41
    assignment_statement  go to state 42
    increment             go to state 43
    increment_statement   go to state 44
    if_statement          go to state 45
    if_part               go to state 46
    return_statement      go to state 47
    for                   go to state 48
    check_statement       go to state 49


State 103

   44 function_call: _ID $@3 _LPAREN argument _RPAREN .

    $default  reduce using rule 44 (function_call)


State 104

   48 arguments: arguments _COMMA . num_exp

    _ID           shift, and go to state 53
    _INT_NUMBER   shift, and go to state 54
    _UINT_NUMBER  shift, and go to state 55
    _LPAREN       shift, and go to state 56

    num_exp        go to state 108
    exp            go to state 59
    literal        go to state 60
    increment      go to state 61
    function_call  go to state 62


State 105

   62 for: _FOR _TYPE _ID @6 _IN _LPAREN . literal _DDOT literal _RPAREN @7 statement

    _INT_NUMBER   shift, and go to state 54
    _UINT_NUMBER  shift, and go to state 55

    literal  go to state 109


State 106

   65 check_statement: _CHECK _LPAREN _ID @8 _RPAREN _LBRACKET . check $@9 _RBRACKET

    _WHEN  shift, and go to state 110

    check      go to state 111
    when_list  go to state 112
    when       go to state 113


State 107

   53 if_part: _IF _LPAREN @4 log_exp $@5 _RPAREN statement .

    $default  reduce using rule 53 (if_part)


State 108

   33 num_exp: num_exp . _AROP exp
   48 arguments: arguments _COMMA num_exp .

    _AROP  shift, and go to state 75

    $default  reduce using rule 48 (arguments)


State 109

   62 for: _FOR _TYPE _ID @6 _IN _LPAREN literal . _DDOT literal _RPAREN @7 statement

    _DDOT  shift, and go to state 114


State 110

   73 when: _WHEN . literal $@10 _FOLLOWS statement

    _INT_NUMBER   shift, and go to state 54
    _UINT_NUMBER  shift, and go to state 55

    literal  go to state 115


State 111

   65 check_statement: _CHECK _LPAREN _ID @8 _RPAREN _LBRACKET check . $@9 _RBRACKET

    $default  reduce using rule 64 ($@9)

    $@9  go to state 116


State 112

   66 check: when_list .
   67      | when_list . otherwise
   70 when_list: when_list . when
   71          | when_list . when _FINISH _SEMICOLON

    _OTHERW  shift, and go to state 117
    _WHEN    shift, and go to state 110

    $default  reduce using rule 66 (check)

    when       go to state 118
    otherwise  go to state 119


State 113

   68 when_list: when .
   69          | when . _FINISH _SEMICOLON

    _FINISH  shift, and go to state 120

    $default  reduce using rule 68 (when_list)


State 114

   62 for: _FOR _TYPE _ID @6 _IN _LPAREN literal _DDOT . literal _RPAREN @7 statement

    _INT_NUMBER   shift, and go to state 54
    _UINT_NUMBER  shift, and go to state 55

    literal  go to state 121


State 115

   73 when: _WHEN literal . $@10 _FOLLOWS statement

    $default  reduce using rule 72 ($@10)

    $@10  go to state 122


State 116

   65 check_statement: _CHECK _LPAREN _ID @8 _RPAREN _LBRACKET check $@9 . _RBRACKET

    _RBRACKET  shift, and go to state 123


State 117

   75 otherwise: _OTHERW . _FOLLOWS $@11 statement

    _FOLLOWS  shift, and go to state 124


State 118

   70 when_list: when_list when .
   71          | when_list when . _FINISH _SEMICOLON

    _FINISH  shift, and go to state 125

    $default  reduce using rule 70 (when_list)


State 119

   67 check: when_list otherwise .

    $default  reduce using rule 67 (check)


State 120

   69 when_list: when _FINISH . _SEMICOLON

    _SEMICOLON  shift, and go to state 126


State 121

   62 for: _FOR _TYPE _ID @6 _IN _LPAREN literal _DDOT literal . _RPAREN @7 statement

    _RPAREN  shift, and go to state 127


State 122

   73 when: _WHEN literal $@10 . _FOLLOWS statement

    _FOLLOWS  shift, and go to state 128


State 123

   65 check_statement: _CHECK _LPAREN _ID @8 _RPAREN _LBRACKET check $@9 _RBRACKET .

    $default  reduce using rule 65 (check_statement)


State 124

   75 otherwise: _OTHERW _FOLLOWS . $@11 statement

    $default  reduce using rule 74 ($@11)

    $@11  go to state 129


State 125

   71 when_list: when_list when _FINISH . _SEMICOLON

    _SEMICOLON  shift, and go to state 130


State 126

   69 when_list: when _FINISH _SEMICOLON .

    $default  reduce using rule 69 (when_list)


State 127

   62 for: _FOR _TYPE _ID @6 _IN _LPAREN literal _DDOT literal _RPAREN . @7 statement

    $default  reduce using rule 61 (@7)

    @7  go to state 131


State 128

   73 when: _WHEN literal $@10 _FOLLOWS . statement

    _IF        shift, and go to state 33
    _RETURN    shift, and go to state 34
    _ID        shift, and go to state 35
    _LBRACKET  shift, and go to state 36
    _FOR       shift, and go to state 38
    _CHECK     shift, and go to state 39

    statement             go to state 132
    compound_statement    go to state 41
    assignment_statement  go to state 42
    increment             go to state 43
    increment_statement   go to state 44
    if_statement          go to state 45
    if_part               go to state 46
    return_statement      go to state 47
    for                   go to state 48
    check_statement       go to state 49


State 129

   75 otherwise: _OTHERW _FOLLOWS $@11 . statement

    _IF        shift, and go to state 33
    _RETURN    shift, and go to state 34
    _ID        shift, and go to state 35
    _LBRACKET  shift, and go to state 36
    _FOR       shift, and go to state 38
    _CHECK     shift, and go to state 39

    statement             go to state 133
    compound_statement    go to state 41
    assignment_statement  go to state 42
    increment             go to state 43
    increment_statement   go to state 44
    if_statement          go to state 45
    if_part               go to state 46
    return_statement      go to state 47
    for                   go to state 48
    check_statement       go to state 49


State 130

   71 when_list: when_list when _FINISH _SEMICOLON .

    $default  reduce using rule 71 (when_list)


State 131

   62 for: _FOR _TYPE _ID @6 _IN _LPAREN literal _DDOT literal _RPAREN @7 . statement

    _IF        shift, and go to state 33
    _RETURN    shift, and go to state 34
    _ID        shift, and go to state 35
    _LBRACKET  shift, and go to state 36
    _FOR       shift, and go to state 38
    _CHECK     shift, and go to state 39

    statement             go to state 134
    compound_statement    go to state 41
    assignment_statement  go to state 42
    increment             go to state 43
    increment_statement   go to state 44
    if_statement          go to state 45
    if_part               go to state 46
    return_statement      go to state 47
    for                   go to state 48
    check_statement       go to state 49


State 132

   73 when: _WHEN literal $@10 _FOLLOWS statement .

    $default  reduce using rule 73 (when)


State 133

   75 otherwise: _OTHERW _FOLLOWS $@11 statement .

    $default  reduce using rule 75 (otherwise)


State 134

   62 for: _FOR _TYPE _ID @6 _IN _LPAREN literal _DDOT literal _RPAREN @7 statement .

    $default  reduce using rule 62 (for)
